BEGIN TRANSACTION;
DROP TABLE IF EXISTS "District";
CREATE TABLE District (ID INTEGER PRIMARY KEY ASC AUTOINCREMENT CHECK (ID = 1) DEFAULT (1), Name TEXT UNIQUE NOT NULL, Grade_Span_From STRING, Grade_Span_To STRING, Abbreviation STRING, AD_FQDN STRING, AD_Server STRING, AD_BaseDN STRING, AD_NetBIOS STRING, AD_Username STRING, AD_Password STRING, AD_Student_Group STRING, GA_FQDN STRING, Parent_Email_Group STRING, Staff_Username_Format STRING, Student_Username_Format STRING, Using_GADS BOOLEAN NOT NULL DEFAULT (FALSE), Using_GAPS BOOLEAN NOT NULL DEFAULT (FALSE));
DROP TABLE IF EXISTS "School";
CREATE TABLE IF NOT EXISTS "School" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"Name"	TEXT,
	"Abbreviation"	STRING,
	"Parent_Email_Group"	STRING,
	"OU"	TEXT
);
DROP TABLE IF EXISTS "Audit";
CREATE TABLE IF NOT EXISTS "Audit" (
	"ID"	INTEGER,
	"Timestamp"	DATETIME DEFAULT (SYSDATETIME()),
	"Username"	TEXT,
	"IP"	TEXT,
	"Action"	TEXT,
	"URI"	TEXT,
	"Description"	TEXT,
	PRIMARY KEY("ID")
);
DROP TABLE IF EXISTS "User";
CREATE TABLE IF NOT EXISTS "User" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"Last_Authenticated"	DATETIME DEFAULT (SYSDATETIME()),
	"User_Object"	STRING,
	"Token"	STRING UNIQUE
);
DROP TABLE IF EXISTS "Email";
CREATE TABLE IF NOT EXISTS "Email" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"From_Address"	STRING,
	"From_Name"	STRING,
	"Admin_Email_Addresses"	STRING,
	"Welcome_Email_BCC"	STRING,
	"Welcome_Email"	STRING,
	"Reply_To_Address"	STRING,
	"Reply_To_Name"	STRING,
	"Use_SMTP_SSL"	BOOLEAN,
	"SMTP_Server"	STRING,
	"SMTP_Port"	INTEGER,
	"Use_SMTP_Auth"	BOOLEAN,
	"SMTP_Username"	STRING,
	"SMTP_Password"	STRING
);
DROP TABLE IF EXISTS "ActiveDirectory";
CREATE TABLE IF NOT EXISTS "ActiveDirectory" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"District_ID"	INTEGER UNIQUE,
	"School_ID"	INTEGER UNIQUE,
	"Department_ID"	INTEGER,
	"Grade_ID"	INTEGER,
	"Team_ID"	INTEGER,
	"Type"	STRING NOT NULL CHECK((Type='Student' or Type='Staff')),
	"OU"	STRING,
	"Group"	STRING,
	"Home_Path"	STRING,
	"Logon_Script"	STRING,
	"Description"	STRING,
	"Force_Password_Change"	BOOLEAN NOT NULL DEFAULT (TRUE),
	FOREIGN KEY("Grade_ID") REFERENCES "Grade"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("District_ID") REFERENCES "District"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("School_ID") REFERENCES "School"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("Department_ID") REFERENCES "Department"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("Team_ID") REFERENCES "Team"("ID") ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS "App";
CREATE TABLE IF NOT EXISTS "App" (
	"ID"	TEXT DEFAULT (1) CHECK(ID=1),
	"Name"	STRING NOT NULL DEFAULT "School Accounts Manager",
	"Force_HTTPS"	BOOLEAN NOT NULL DEFAULT (FALSE),
	"MOTD"	TEXT,
	"Debug_Mode"	BOOLEAN NOT NULL DEFAULT (FALSE),
	"Admin_Password"	STRING NOT NULL DEFAULT ('5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8'),
	"Protected_Admin_Usernames"	STRING,
	"Websitie_FQDN"	STRING,
	"App_Version"	STRING DEFAULT ('0.1.0'),
	"Database_Version"	STRING DEFAULT ('0.1.0'),
	"User_Helpdesk_URL"	STRING,
	"Update_Check_URL"	STRING DEFAULT ('https://raw.githubusercontent.com/jacobsen9026/School-Accounts-Manager/master/version.txt'),
	PRIMARY KEY("ID")
);
DROP TABLE IF EXISTS "Department";
CREATE TABLE IF NOT EXISTS "Department" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"School_ID"	INTEGER,
	"Name"	STRING,
	FOREIGN KEY("School_ID") REFERENCES "School"("ID") ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS "GoogleApps";
CREATE TABLE IF NOT EXISTS "GoogleApps" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"School_ID"	INTEGER,
	"District_ID"	INTEGER,
	"Department_ID"	INTEGER,
	"Grade_ID"	INTEGER,
	"Team_ID"	INTEGER,
	"Type"	STRING NOT NULL CHECK((Type='Student' or Type='Staff')),
	"OU"	STRING,
	"Group"	STRING,
	"Username_Format"	STRING,
	"Other_Groups"	STRING,
	"Force_Password_Change"	BOOLEAN NOT NULL DEFAULT (TRUE),
	FOREIGN KEY("Grade_ID") REFERENCES "Grade"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("School_ID") REFERENCES "School"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("District_ID") REFERENCES "District"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("Department_ID") REFERENCES "Department"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("Team_ID") REFERENCES "Team" ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS "Grade";
CREATE TABLE IF NOT EXISTS "Grade" (
	"ID"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	"School_ID"	INTEGER NOT NULL,
	"Grade_Definition_ID"	INTEGER NOT NULL,
	"Parent_Email_Group"	STRING,
	FOREIGN KEY("School_ID") REFERENCES "School"("ID") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("Grade_Definition_ID") REFERENCES "GradeDefinition"("Value") ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS "Logon";
CREATE TABLE IF NOT EXISTS "Logon" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"Timestamp"	DATETIME DEFAULT (SYSDATETIME()),
	"Username"	STRING
);
DROP TABLE IF EXISTS "Team";
CREATE TABLE IF NOT EXISTS "Team" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"Grade_ID"	INTEGER NOT NULL,
	"Name"	STRING,
	"Parent_Email_Group"	STRING,
	FOREIGN KEY("Grade_ID") REFERENCES "Grade"("ID") ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS "GradeDefinition";
CREATE TABLE IF NOT EXISTS "GradeDefinition" (
	"Value"	INTEGER,
	"Display_Code"	STRING,
	"Display_Name"	STRING,
	PRIMARY KEY("Value")
);
DROP TABLE IF EXISTS "Permission";
CREATE TABLE IF NOT EXISTS "Permission" (
	"ID"	INTEGER PRIMARY KEY AUTOINCREMENT,
	"Path"	TEXT UNIQUE,
	"Required_Permission"	INTEGER NOT NULL
);
DROP TABLE IF EXISTS "Auth";
CREATE TABLE IF NOT EXISTS "Auth" (
	"ID"	INTEGER,
	"Tech_AD_Group"	STRING,
	"Admin_AD_Group"	STRING,
	"Power_AD_Group"	STRING,
	"Basic_AD_Group"	STRING,
	"Tech_GA_Group"	STRING,
	"Admin_GA_Group"	STRING,
	"Power_GA_Group"	STRING,
	"Basic_GA_Group"	STRING,
	"LDAP_Enabled"	BOOLEAN DEFAULT (FALSE),
	"LDAP_Server"	STRING,
	"LDAP_FQDN"	STRING,
	"LDAP_Port"	INTEGER,
	"LDAP_Username"	STRING,
	"LDAP_Password"	STRING,
	"LDAP_Use_SSL"	BOOLEAN,
	"OAuth_Enabled"	BOOLEAN DEFAULT (FALSE),
	"Session_Timeout"	INTEGER NOT NULL DEFAULT (1200),
	PRIMARY KEY("ID")
);
DROP TRIGGER IF EXISTS "Setup App";
CREATE TRIGGER "Setup App" AFTER INSERT ON App BEGIN INSERT INTO Auth (ID) VALUES (New.ID); INSERT INTO Email (ID) VALUES (New.ID); END;
DROP TRIGGER IF EXISTS "Initialize Grades";
CREATE TRIGGER "Initialize Grades" AFTER INSERT ON Grade BEGIN INSERT INTO ActiveDirectory (Grade_ID, Type) VALUES (new.ID, 'Staff'); INSERT INTO GoogleApps (Grade_ID, Type) VALUES (new.ID, 'Staff'); INSERT INTO ActiveDirectory (Grade_ID, Type) VALUES (new.ID, 'Student'); INSERT INTO GoogleApps (Grade_ID, Type) VALUES (new.ID, 'Student'); END;
DROP TRIGGER IF EXISTS "Initialize Team";
CREATE TRIGGER "Initialize Team" AFTER INSERT ON Team BEGIN INSERT INTO ActiveDirectory (Team_ID, Type) VALUES (new.ID, 'Staff'); INSERT INTO GoogleApps (Team_ID, Type) VALUES (new.ID, 'Staff'); INSERT INTO ActiveDirectory (Team_ID, Type) VALUES (new.ID, 'Student'); INSERT INTO GoogleApps (Team_ID, Type) VALUES (new.ID, 'Student'); END;
COMMIT;
